{"version":3,"sources":["components/Header.js","components/Footer.js","constants/Sections.js","components/NavBar.js","styled-components/HomeStyles.js","components/home/About-Content.js","components/home/About-Image.js","components/home/About-Social.js","components/home/About.js","components/home/Banner.js","components/home/SkillList-Contact.js","components/home/SkillList.js","components/home/Work-Projects.js","components/home/Work.js","components/home/Contact-Form.js","components/home/Contact-Info.js","components/home/Body.js","components/home/Contact.js","pages/HomePage.js","services/admin.update.js","components/form/form.button.js","components/form/richtest.field.js","components/form/about.form.js","components/admin/About.js","components/form/skill.form.js","components/admin/SkillList.js","components/form/project.form.js","components/admin/ProjectList.js","components/form/contactinfo.form.js","components/admin/ContactInfo.js","components/admin/Body.js","services/auth.service.js","pages/AdminPage.js","styled-components/LoginStyles.js","components/authentication/login.component.js","pages/LoginPage.js","App.js","serviceWorker.js","index.js"],"names":["Header","id","Footer","Sections","name","StyledLink","styled","Link","NavBar","Fragment","Navbar","bg","expand","sticky","Container","Brand","href","Toggle","aria-controls","Collapse","Nav","className","map","section","i","key","to","spy","smooth","duration","offset","WorksModal","Modal","Section","SectionTitle","h2","SocialLink","span","GreyImg","img","FilterBtn","Button","GalleryProject","div","SingleProject","AboutContent","description","Row","Col","sm","dangerouslySetInnerHTML","__html","AboutImage","image","src","width","alt","ProfileCol","library","add","fab","faDownload","AboutSocial","useState","socials","setSocials","isLoaded","setIsLoaded","useEffect","a","fetch","result","json","body","fetchData","social","link","target","rel","icon","iconType","size","About","title","window","THREE","OrbitControls","TWEEN","Banner","camera","controls","scene","renderer","light","centerOffset","mount","SCREEN_WIDTH","innerWidth","SCREEN_HEIGHT","innerHeight","clock","userOpts","onWindowResize","aspect","updateProjectionMatrix","setSize","createScene","geometry","planeMaterial","color","ground","position","set","rotation","x","Math","PI","scale","castShadow","receiveShadow","load","font","textGeo","height","curveSegments","bevelThickness","bevelSize","bevelEnabled","computeBoundingBox","boundingBox","max","min","textMaterial","specular","text","y","setupTween","loadFurniture","render","delta","getDelta","update","clear","m1","m2","m3","m4","m5","m6","m7","object","traverse","child","cube","current","removeAll","tweenHead","Tween","delay","easing","Easing","Elastic","Out","onUpdate","tweenBack","chain","start","this","fog","shadow","bias","mapSize","antialias","setClearColor","setPixelRatio","devicePixelRatio","autoClear","appendChild","domElement","shadowMap","enabled","type","enableZoom","minPolarAngle","maxPolarAngle","addEventListener","animate","requestAnimationFrame","ref","React","Component","SkillListContact","faDatabase","faMobileAlt","Skill","skills","setSkills","skill","md","content","WorksGallery","defaultModalContent","contribution","percentage","projects","setProjects","projectList","setProjectList","filters","updateFilters","show","setShow","currentModalContent","updateCurrentModalContent","projectsResult","projectListResult","projectsBody","projectListBody","newProjectListBody","sort","b","handleShow","event","clickedIndex","getAttribute","find","selectedProject","_id","onFilter","value","newProjectList","list","isChecked","filter","f","indexOf","onClick","project","lg","xs","style","cursor","data-index","onHide","centered","scrollable","closeButton","Title","Body","Tabs","defaultActiveKey","transition","Tab","eventKey","ReactHtmlParser","ProgressBar","now","label","Work","ContactForm","validated","setValidated","contactName","contactEmail","contactMessage","inputvalues","setInputValues","handleChange","Form","noValidate","onSubmit","preventDefault","stopPropagation","currentTarget","checkValidity","console","log","Group","as","controlId","Label","Control","placeholder","onChange","required","Feedback","rows","variant","faUser","faPhone","faEnvelope","ContactInfo","personalInfo","p","htmlContent","sectionComponents","setPersonalInfo","sections","setSections","index","SingleComponent","createElement","HomePage","updateAbout","axios","post","response","data","success","updateSkills","addNewSkill","deleteSkill","updateProjects","values","updateContactInfo","SubmitButton","isSubmitting","isChanged","isUpdated","isNewForm","disabled","AddButton","RemoveButton","RichtEditor","apiKey","initialValue","init","menubar","onEditorChange","AboutForm","aboutSection","setIsChanged","setIsUpdated","initialValues","submitForm","validate","errors","FormGroup","FormLabel","component","field","setFieldValue","form","c","setAboutSection","jsonResult","length","SkillForm","isDeleted","setIsDeleted","removeSkill","newForm","setNewForm","ProjectForm","ContactInfoForm","contactInfo","contactInfos","setContactInfos","ProjectList","login","username","password","accessToken","localStorage","setItem","JSON","stringify","getCurrentUser","parse","getItem","AdminUser","history","useHistory","email","isAdmin","userInfo","setUserInfo","AuthService","userDetail","roles","includes","logout","removeItem","push","StyledForm","LoginForm","isLogin","setLogin","alert","message","App","path","exact","adminUser","Login","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onSuccess","catch","error","ReactDOM","StrictMode","document","getElementById","URL","process","origin","headers","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8700fb07.chunk.js","sourcesContent":["// import React, { useState, useEffect } from 'react';\r\nimport React from 'react';\r\n// import UserService from \"../services/user.service\";\r\n\r\n\r\nconst Header = () => {\r\n    // const [user, setUser] = useState(\"\");\r\n\r\n    // useEffect(() => {\r\n    //     UserService.getPublicContent().then(\r\n    //         response => {\r\n    //             setUser(response.data);\r\n    //         },\r\n    //         error => {\r\n    //             setUser(error);\r\n    //         }\r\n    //     );\r\n    // },[]);\r\n\r\n    return (\r\n        <div id='Header'>\r\n            {/* {user} */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div id=\"Footer\">\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;","const Sections = [\r\n    {\r\n        name: 'Home',\r\n        id: 'banner',\r\n    },\r\n    {\r\n        name: 'About Me',\r\n        id: 'about',\r\n    },\r\n    {\r\n        name: 'What I can do',\r\n        id: 'skill',\r\n    },\r\n    {\r\n        name: 'My Works',\r\n        id: 'work',\r\n    },\r\n    {\r\n        name: 'Contact Me',\r\n        id: 'contact',\r\n    },\r\n];\r\n\r\nexport default Sections;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Navbar, Nav, Container } from 'react-bootstrap';\r\nimport { Link } from \"react-scroll\";\r\nimport Sections from '../constants/Sections';\r\n\r\nconst StyledLink = styled(Link)`\r\n    position: stick;\r\n    &:hover,&.active {\r\n    text-decoration: underline;\r\n    }\r\n`;\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Navbar bg=\"light\" expand=\"lg\" sticky=\"top\">\r\n                <Container>\r\n                    <Navbar.Brand href=\"/\" >Luke Gong</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            {Sections.map((section, i) => {\r\n                                return <StyledLink\r\n                                    key={i}\r\n                                    to={section.id}\r\n                                    spy={true}\r\n                                    smooth={true}\r\n                                    duration={500}\r\n                                    offset={-400}\r\n                                    className='nav-link'\r\n                                    href=\"#\"\r\n                                >{section.name}</StyledLink>\r\n                            })}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n\r\n            </Navbar>\r\n        </React.Fragment>\r\n\r\n    );\r\n}\r\n\r\nexport default NavBar;","import styled from 'styled-components';\r\nimport { Button, Modal } from 'react-bootstrap';\r\n\r\n\r\nexport const WorksModal = styled(Modal)`\r\n    text-align: center;\r\n    & .tab-content{\r\n        font-size: 15px;\r\n        text-align: left;\r\n    }\r\n    & h3, .h4{\r\n        font-family: \"Roboto Slab\", serif;\r\n        font-weight: 500;\r\n        line-height: 1.1;\r\n        color: inherit;\r\n        margin-top: 22px;\r\n        margin-bottom: 22px;\r\n        font-size: 1.75rem;\r\n    }\r\n`;\r\n\r\nexport const Section = styled.section`\r\n    position: relative;\r\n    padding-top: 60px;\r\n    padding-bottom: 60px;\r\n    text-align: center;\r\n    &.text-gradient{\r\n        background: #222222;\r\n        color: #fff;\r\n        background-image: -webkit-linear-gradient(top, #555555 0%, #333333 100%);\r\n        background-image: linear-gradient(to bottom, #555555 0%, #333333 100%);\r\n        background-repeat: repeat-x;\r\n    }\r\n    &.skillList{\r\n        & .icon{\r\n            color: #aaa;\r\n            font-size: 60px;\r\n            text-align: center;\r\n            text-shadow: 5px 5px 0 #333;\r\n        }\r\n        & p{\r\n            font-size: 15px;\r\n            text-align: left;\r\n            &.lead{\r\n                font-size: 1.25rem;\r\n                font-weight: 300;\r\n                text-align: center;\r\n            }\r\n        }\r\n        & h3{\r\n            margin-top: 22px;\r\n            margin-bottom: 22px;\r\n            font-family: \"Roboto Slab\", serif;\r\n            font-weight: 500;\r\n            line-height: 1.1;\r\n            color: inherit;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GradientSection = styled(Section)`\r\n    background: #222222;\r\n    color: #fff;\r\n    background-image: -webkit-linear-gradient(top, #555555 0%, #333333 100%);\r\n    background-image: linear-gradient(to bottom, #555555 0%, #333333 100%);\r\n    background-repeat: repeat-x;\r\n`;\r\n\r\n\r\nexport const SectionTitle = styled.h2`\r\n    display: inline-block;\r\n    font-size: 50px;\r\n    font-weight: 100;\r\n    padding: 10px 0;\r\n    margin-bottom: 44px;\r\n    text-align: center;\r\n    border-bottom: solid 1px #ccc;\r\n    border-top: solid 1px #ccc;\r\n    text-transform: uppercase;\r\n    line-height: 1.2;\r\n`;\r\n\r\nexport const SocialLink = styled.span`\r\n\r\n    &.resume a:hover{\r\n        color: #4285f4;\r\n    }\r\n    &.github a:hover{\r\n        color: #6e5494;\r\n    }\r\n    &.linkedin a:hover{\r\n        color: #4285f4;\r\n    }\r\n`;\r\nexport const GreyImg = styled.img`\r\n    filter: grayscale(50%);\r\n`;\r\n\r\nexport const FilterBtn = styled(Button)`\r\n    border: 1px solid;\r\n`;\r\n\r\nexport const GalleryProject = styled.div`\r\n    position: relative;\r\n    margin: 0 auto;\r\n    margin-top: 10px;\r\n    width: 250px;\r\n    height: 200px;\r\n    overflow: hidden;\r\n    \r\n    & .gallery_image{\r\n        display: block;\r\n        width: 100%;\r\n        height: auto;\r\n        -webkit-filter: grayscale(50%);\r\n        filter: grayscale(50%);\r\n    }\r\n`;\r\nexport const SingleProject = styled.div`\r\n    & .gallery_image{\r\n        display: block;\r\n        width: 100%;\r\n        height: auto;\r\n        -webkit-filter: grayscale(50%);\r\n        filter: grayscale(50%);\r\n    }\r\n`;","import React from 'react';\r\nimport { Link } from \"react-scroll\";\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\n\r\nconst AboutContent = ({description}) => (\r\n    <React.Fragment>\r\n        <Row>\r\n            <Col sm=\"12\" className=\"text-left\">\r\n                <div dangerouslySetInnerHTML={{__html: description}} />\r\n                <p>Interested me? Click <Link to=\"contact\" smooth={true} href=\"#\">Here</Link> to know more about me!</p>\r\n            </Col>\r\n        </Row>\r\n    </React.Fragment>\r\n);\r\n\r\nexport default AboutContent;\r\n","import React from 'react';\r\nimport { GreyImg } from '../../styled-components/HomeStyles';\r\nimport { Row } from 'react-bootstrap';\r\n\r\n\r\nconst AboutImage = ({ image }) => (\r\n    <React.Fragment>\r\n        <Row >\r\n            <GreyImg src={`${image ? image : \"./assets/images/personal.jpg\" }`} width=\"30%\" className=\"image img-fluid img-circl mx-auto d-block\" alt=\"This is me\" />\r\n        </Row>\r\n    </React.Fragment>\r\n);\r\n\r\nexport default AboutImage;\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { SocialLink } from '../../styled-components/HomeStyles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nconst ProfileCol = styled(Col)`\r\n    &.profile{\r\n            padding-top: 10px;\r\n        & a{\r\n            color: #666;\r\n        }\r\n    }\r\n    \r\n`;\r\n\r\n// add the icons into library\r\nlibrary.add(fab, faDownload);\r\n\r\nconst AboutSocial = () => {\r\n\r\n    const [socials, setSocials] = useState({});\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await fetch('api/socials');\r\n            const body = await result.json();\r\n            setSocials(body);\r\n            setIsLoaded(true);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        isLoaded ?\r\n            <React.Fragment>\r\n                {socials.map((social, i) => {\r\n                    return (\r\n                        <Row key={i}>\r\n                            <ProfileCol className=\"profile mx-auto d-block\">\r\n                                <SocialLink className={social.id}>\r\n                                    <a href={social.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                        <FontAwesomeIcon icon={[social.iconType, social.icon]} size={social.size}></FontAwesomeIcon> {social.name}\r\n                                    </a>\r\n                                </SocialLink>\r\n                            </ProfileCol>\r\n                        </Row>\r\n                    )\r\n                })}\r\n            </React.Fragment>\r\n            :\r\n            <React.Fragment>loading...</React.Fragment>\r\n    )\r\n};\r\n\r\n\r\nexport default AboutSocial;\r\n","import React from 'react';\r\nimport { Section, SectionTitle } from '../../styled-components/HomeStyles';\r\nimport AboutContent from './About-Content';\r\nimport AboutImage from './About-Image';\r\nimport AboutSocial from './About-Social';\r\nimport { Container } from 'react-bootstrap';\r\n\r\n\r\nconst About = ({ title, description, image }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Container>\r\n                <Section id=\"about\">\r\n                    <SectionTitle >\r\n                        {title}\r\n                    </SectionTitle>\r\n                    <AboutContent description={description} />\r\n                    <AboutImage image={image} />\r\n                    <AboutSocial />\r\n                </Section>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default About;","import React from 'react';\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport { TWEEN } from 'three/examples/jsm/libs/tween.module.min.js';\r\nwindow.THREE = THREE;\r\nwindow.OrbitControls = OrbitControls;\r\nwindow.TWEEN = TWEEN;\r\n\r\nclass Banner extends React.Component {\r\n    componentDidMount() {\r\n        var SHADOW_MAP_WIDTH = 2048,\r\n            SHADOW_MAP_HEIGHT = 1024;\r\n\r\n        var SCREEN_WIDTH = window.innerWidth;\r\n        var SCREEN_HEIGHT = window.innerHeight;\r\n        var FLOOR = -300;\r\n\r\n        var camera, controls, scene, renderer;\r\n\r\n        var NEAR = 10,\r\n            FAR = 4000;\r\n\r\n\r\n        var light;\r\n\r\n        var clock = new THREE.Clock();\r\n\r\n        var userOpts = {\r\n            range: 10, //SCREEN_WIDTH*0.3,\r\n            duration: 3500,\r\n            delay: 500\r\n        };\r\n        var centerOffset;\r\n\r\n\r\n\r\n        var init = function(mount) {\r\n\r\n            // SCENE CAMERA\r\n\r\n            camera = new THREE.PerspectiveCamera(23, SCREEN_WIDTH / SCREEN_HEIGHT, NEAR, FAR);\r\n            camera.position.set(0, 50, 2500);\r\n\r\n\r\n            // SCENE\r\n\r\n            scene = new THREE.Scene();\r\n            scene.fog = new THREE.Fog(0x3d3d3d, 1000, FAR);\r\n\r\n            // LIGHTS\r\n\r\n            // var ambient = new THREE.AmbientLight(0x444444);\r\n            // scene.add(ambient);\r\n\r\n            light = new THREE.SpotLight(0xffffff);\r\n            light.position.set(0, 1500, 1000);\r\n            light.target.position.set(0, 0, 0);\r\n\r\n            light.castShadow = true;\r\n\r\n            light.shadow = new THREE.LightShadow(new THREE.PerspectiveCamera(50, 1, 1200, 2500));\r\n            light.shadow.bias = 0.0001;\r\n\r\n            light.shadow.mapSize.width = SHADOW_MAP_WIDTH;\r\n            light.shadow.mapSize.height = SHADOW_MAP_HEIGHT;\r\n\r\n            scene.add(light);\r\n\r\n            createScene();\r\n\r\n            // RENDERER\r\n\r\n            renderer = new THREE.WebGLRenderer({ antialias: true });\r\n            renderer.setClearColor(scene.fog.color);\r\n            renderer.setPixelRatio(window.devicePixelRatio);\r\n            renderer.setSize(SCREEN_WIDTH, SCREEN_HEIGHT);\r\n\r\n            renderer.autoClear = false;\r\n\r\n            //\r\n            // container = document.getElementById('banner');\r\n            mount.appendChild(renderer.domElement);\r\n\r\n            renderer.shadowMap.enabled = true;\r\n            renderer.shadowMap.type = THREE.PCFShadowMap;\r\n\r\n\r\n            //\r\n            controls = new OrbitControls(camera, renderer.domElement);\r\n            controls.enableZoom = false;\r\n            controls.minPolarAngle = 0; // radians\r\n            controls.maxPolarAngle = Math.PI / 2; // radians\r\n\r\n            // controls.minAzimuthAngle = -Math.PI / 2;\r\n            // controls.maxAzimuthAngle = Math.PI / 2;\r\n\r\n            window.addEventListener('resize', onWindowResize, false);\r\n            // window.addEventListener('keydown', onKeyDown, false);\r\n\r\n        }\r\n\r\n        var onWindowResize = function() {\r\n\r\n            SCREEN_WIDTH = window.innerWidth;\r\n            SCREEN_HEIGHT = window.innerHeight;\r\n\r\n            camera.aspect = SCREEN_WIDTH / SCREEN_HEIGHT;\r\n            camera.updateProjectionMatrix();\r\n\r\n            renderer.setSize(SCREEN_WIDTH, SCREEN_HEIGHT);\r\n\r\n            //controls.handleResize();\r\n\r\n        }\r\n\r\n        var createScene = function() {\r\n\r\n            // GROUND\r\n\r\n            var geometry = new THREE.PlaneBufferGeometry(100, 100);\r\n            var planeMaterial = new THREE.MeshPhongMaterial({ color: 0xaaaaaa });\r\n\r\n            var ground = new THREE.Mesh(geometry, planeMaterial);\r\n\r\n            ground.position.set(0, FLOOR, 0);\r\n            ground.rotation.x = -Math.PI / 2;\r\n            ground.scale.set(100, 100, 100);\r\n\r\n            ground.castShadow = false;\r\n            ground.receiveShadow = true;\r\n\r\n            scene.add(ground);\r\n\r\n            // TEXT\r\n\r\n            var loader = new THREE.FontLoader();\r\n            loader.load('../../assets/lib/fonts/optimer_regular.typeface.json', function (font) {\r\n\r\n                var textGeo = new THREE.TextGeometry(\"Luke Gong\", {\r\n\r\n                    font: font,\r\n\r\n                    size: 50,\r\n                    height: 10,\r\n                    curveSegments: 12,\r\n\r\n                    bevelThickness: 2,\r\n                    bevelSize: 1,\r\n                    bevelEnabled: true\r\n\r\n                });\r\n\r\n                textGeo.computeBoundingBox();\r\n                centerOffset = -0.5 * (textGeo.boundingBox.max.x - textGeo.boundingBox.min.x);\r\n\r\n                var textMaterial = new THREE.MeshPhongMaterial({ color: 0xc0c0c0, specular: 0xffffff });\r\n\r\n                var text = new THREE.Mesh(textGeo, textMaterial);\r\n                text.position.x = centerOffset;\r\n                text.position.y = 250;\r\n\r\n                text.castShadow = true;\r\n                text.receiveShadow = true;\r\n\r\n                scene.add(text);\r\n                setupTween(text);\r\n            });\r\n\r\n\r\n            //objects\r\n            // loadFurniture(\"screen_left\");\r\n            // loadFurniture(\"desk\");\r\n            // loadFurniture(\"screen_main\");\r\n            // loadFurniture(\"desk_leg\");\r\n            // loadFurniture(\"screen_right\");\r\n            // loadFurniture(\"computer_frame\");\r\n            // loadFurniture(\"package\");\r\n            // loadFurniture(\"keyboard01\");\r\n            // loadFurniture(\"mouse\");\r\n            loadFurniture(\"all\");\r\n\r\n        }\r\n\r\n        var animate = function() {\r\n\r\n            requestAnimationFrame(animate);\r\n\r\n            render();\r\n\r\n        }\r\n\r\n        var render = function() {\r\n\r\n            var delta = clock.getDelta();\r\n\r\n            TWEEN.update();\r\n            //controls.update( delta );\r\n            controls.update(delta);\r\n            renderer.clear();\r\n            renderer.render(scene, camera);\r\n\r\n        }\r\n\r\n        // var loadText =  function(material, path, name, repeatx, repeaty) {\r\n        //     var textureLoader = new THREE.TextureLoader();\r\n        //     textureLoader.load(\"../../assets/models/banner_parts/\" + name, function (map) {\r\n        //         map.wrapS = THREE.RepeatWrapping;\r\n        //         map.wrapT = THREE.RepeatWrapping;\r\n        //         map.anisotropy = 4;\r\n        //         if (repeatx && repeaty)\r\n        //             map.repeat.set(repeatx, repeaty);\r\n        //         material.map = map;\r\n        //         material.needsUpdate = true;\r\n        //     });\r\n        // }\r\n\r\n        var loadFurniture = function(name, m1, m2, m3, m4, m5, m6, m7) {\r\n            var loader = new THREE.ObjectLoader();\r\n            loader.load(\"../../assets/models/banner_parts/\" + name + \".json\", function (object) {\r\n                object.scale.set(40, 40, 40);\r\n                object.position.set(0, FLOOR, 0);\r\n                object.rotation.y = -Math.PI / 2;\r\n                object.traverse(function (child) {\r\n\r\n                    if (child instanceof THREE.Mesh) {\r\n                        child.castShadow = true;\r\n                        child.receiveShadow = true;\r\n                        // child.material.color.set(0x0000ff);\r\n                    }\r\n\r\n                });\r\n                scene.add(object);\r\n            });\r\n        }\r\n\r\n        var setupTween = function(cube) {\r\n            //\r\n            var update = function () {\r\n                cube.position.x = current.x + centerOffset;\r\n                cube.position.y = current.y + 250;\r\n            }\r\n            var current = {\r\n                x: -userOpts.range,\r\n                y: -70,\r\n            };\r\n\r\n            // remove previous tweens if needed\r\n            TWEEN.removeAll();\r\n\r\n            // convert the string from dat-gui into tween.js functions\r\n            // build the tween to go ahead\r\n            var tweenHead = new TWEEN.Tween(current)\r\n                .to({ x: +userOpts.range, y: 70 }, userOpts.duration)\r\n                .delay(userOpts.delay)\r\n                .easing(TWEEN.Easing.Elastic.Out)\r\n                .onUpdate(update);\r\n            // build the tween to go backward\r\n            var tweenBack = new TWEEN.Tween(current)\r\n                .to({ x: -userOpts.range, y: -70 }, userOpts.duration)\r\n                .delay(userOpts.delay)\r\n                .easing(TWEEN.Easing.Elastic.Out)\r\n                .onUpdate(update);\r\n\r\n            // after tweenHead do tweenBack\r\n            tweenHead.chain(tweenBack);\r\n            // after tweenBack do tweenHead, so it is cycling\r\n            tweenBack.chain(tweenHead);\r\n\r\n            // start the first\r\n            tweenHead.start();\r\n        }\r\n\r\n        init(this.mount);\r\n        animate();\r\n\r\n    }\r\n    render() {\r\n        return <div id=\"banner\" ref={ref => (this.mount = ref)} />;\r\n    }\r\n}\r\n\r\nexport default Banner;","import React from 'react';\r\nimport { Section } from '../../styled-components/HomeStyles';\r\nimport { Link } from \"react-scroll\";\r\n\r\n\r\nconst SkillListContact = () => (\r\n    <React.Fragment>\r\n        <Section>\r\n            <p className=\"lead\">Would you like to know more or just discuss something?</p>\r\n            <Link to=\"contact\" smooth={true} href=\"#\" className=\"btn btn-light btn-lg\">Contact me</Link>\r\n        </Section>\r\n    </React.Fragment>\r\n);\r\n\r\nexport default SkillListContact;\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Section, SectionTitle } from '../../styled-components/HomeStyles';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n// import Skills from '../../constants/Skills';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport { faDatabase, faMobileAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport SkillListContact from './SkillList-Contact';\r\n\r\nlibrary.add(fab, faDatabase, faMobileAlt);\r\n\r\n\r\nconst Skill = ({ title }) => {\r\n\r\n    const [skills, setSkills] = useState({});\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await fetch('api/skills');\r\n            const body = await result.json();\r\n            setSkills(body);\r\n            setIsLoaded(true);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        isLoaded ? \r\n        <React.Fragment>\r\n            <Section id=\"skill\" className=\"text-gradient skillList\">\r\n                <Container>\r\n                    <SectionTitle>\r\n                        {title}\r\n                    </SectionTitle>\r\n                    <Row>\r\n                        {skills.map((skill, i) => {\r\n                            return (<Col md=\"4\" key={i}>\r\n                                <FontAwesomeIcon className='icon' icon={[skill.iconType, skill.icon]} size={skill.size}></FontAwesomeIcon>\r\n                                <h3 className=\"heading\">{skill.name}</h3>\r\n                                <p>{skill.content}</p>\r\n                            </Col>);\r\n                        })}\r\n                    </Row>\r\n                    <hr />\r\n                    <SkillListContact />\r\n                </Container>\r\n            </Section>\r\n        </React.Fragment>\r\n        :\r\n        <React.Fragment>\r\n            Loading...\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Skill;","import React, { useState, useEffect } from \"react\";\r\nimport ReactHtmlParser from 'react-html-parser';\r\n// import { Projects, PorjectList } from '../../constants/Projects';\r\nimport { FilterBtn, SingleProject, GalleryProject, WorksModal } from '../../styled-components/HomeStyles';\r\nimport { Row, Col, Modal, Tabs, Tab, ProgressBar } from 'react-bootstrap';\r\n// import { useSpring, animated } from 'react-spring'\r\n\r\n\r\n\r\nconst WorksGallery = () => {\r\n    const defaultModalContent = {\r\n        name: '',\r\n        image: '',\r\n        description: '',\r\n        contribution: '',\r\n        percentage: '',\r\n        link: ''\r\n    };\r\n    const [projects, setProjects] = useState({});\r\n    const [projectList, setProjectList] = useState({});\r\n    const [filters, updateFilters] = useState({});\r\n    const [show, setShow] = useState(false);\r\n    const [currentModalContent, updateCurrentModalContent] = useState(defaultModalContent);\r\n\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const projectsResult = await fetch('api/projects');\r\n            const projectListResult = await fetch('api/projectlist');\r\n            const projectsBody = await projectsResult.json();\r\n            const projectListBody = await projectListResult.json();\r\n            const newProjectListBody = projectListBody.sort((a, b) => (a.type > b.type) ? 1 : -1);\r\n            \r\n            setProjects(projectsBody);\r\n            setProjectList(newProjectListBody);\r\n            updateFilters(projectsBody);\r\n            setIsLoaded(true);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleClose = () => {\r\n        updateCurrentModalContent(() => {\r\n            return defaultModalContent;\r\n        });\r\n        setShow(false);\r\n    };\r\n    const handleShow = event => {\r\n        const clickedIndex = event.target.getAttribute(\"data-index\");\r\n        updateCurrentModalContent(() => {\r\n            return projects.find(selectedProject => selectedProject._id === clickedIndex);\r\n        });\r\n        setShow(true);\r\n    };\r\n\r\n    // const props = useSpring({ opacity: 1, from: { opacity: 0 } })\r\n\r\n    const onFilter = event => {\r\n        const {\r\n            target: { value }\r\n        } = event;\r\n\r\n        const newProjectList = projectList.map(list => {\r\n            list.isChecked = list.type === value;\r\n            return list;\r\n        });\r\n        setProjectList(newProjectList);\r\n        updateFilters(() => {\r\n            return projects.filter(f => f.type.indexOf(value) >= 0);\r\n        });\r\n    };\r\n\r\n    return (\r\n        isLoaded ?\r\n            <React.Fragment>\r\n                <Row>\r\n                    <Col md=\"12\" className=\"button-group filters-button-group\">\r\n                        {projectList.map((list, i) => {\r\n                            return (\r\n                                <FilterBtn key={i} value={list.type} className={`btn-light ${list.isChecked ? \"active\" : \"\"}`} onClick={onFilter}>{list.name}</FilterBtn>\r\n                            )\r\n                        })}\r\n                    </Col>\r\n                </Row>\r\n                <div className='mt-5'></div> \r\n                <Row>\r\n                    {filters.map((project, id) => {\r\n                        return (\r\n                            <Col key={id} lg=\"3\" md=\"4\" sm=\"6\" xs=\"12\">\r\n                                <GalleryProject>\r\n                                    <img onClick={handleShow} style={{ cursor: 'pointer' }} data-index={project._id} src={project.image} className=\"img-responsive gallery_image\" alt=\"\" />\r\n                                </GalleryProject>\r\n                                <hr />\r\n                                <h6 className=\"galley_title\">{project.name}</h6>\r\n                            </Col>\r\n\r\n                        );\r\n                    })}\r\n                </Row>\r\n\r\n                <WorksModal\r\n                    show={show}\r\n                    onHide={handleClose}\r\n                    size=\"lg\"\r\n                    centered\r\n                    scrollable={true}\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{currentModalContent.name}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Row className=\"justify-content-md-center\">\r\n                            <SingleProject>\r\n                                <img src={currentModalContent.image} className=\"gallery_image\" alt=\"\" />\r\n                            </SingleProject>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md=\"12\">\r\n                                <h3>{currentModalContent.name}</h3>\r\n                                <Tabs className=\"tab-content\" defaultActiveKey=\"description\" transition={false} id=\"noanim-tab-example\">\r\n                                    <Tab eventKey=\"description\" title=\"Description\">\r\n                                        {ReactHtmlParser(currentModalContent.description)}\r\n                                    </Tab>\r\n                                    <Tab eventKey=\"contribution\" title=\"Contribution\">\r\n                                        {ReactHtmlParser(currentModalContent.contribution)}\r\n                                    </Tab>\r\n                                </Tabs>\r\n                                <ProgressBar now={currentModalContent.percentage} label={`${currentModalContent.percentage}%`} />\r\n                                <br />\r\n                                <div className=\"bg-inverse text-white\">\r\n                                    <a href={currentModalContent.link} type=\"button\" rel=\"noopener noreferrer\" target=\"_blank\">See Project</a>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Modal.Body>\r\n                </WorksModal>\r\n            </React.Fragment >\r\n            :\r\n            <React.Fragment>\r\n                Loading...\r\n        </React.Fragment>\r\n    );\r\n\r\n};\r\n\r\nexport default WorksGallery;\r\n","import React from 'react';\r\nimport { Section, SectionTitle } from '../../styled-components/HomeStyles';\r\nimport WorksGallery from './Work-Projects';\r\nimport { Container } from 'react-bootstrap';\r\n\r\n\r\nconst Work = ({ title }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Section id=\"work\" className=\"myworks\">\r\n                <Container >\r\n                    <SectionTitle>\r\n                        {title}\r\n                    </SectionTitle>\r\n                    <WorksGallery />\r\n                </Container>\r\n            </Section>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Work;","import React, { useState } from 'react';\r\nimport { Form, Col, Button } from 'react-bootstrap';\r\n\r\n\r\n\r\nconst ContactForm = () => {\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const [inputvalues, setInputValues] = useState({\r\n        contactName: '',\r\n        contactEmail: '',\r\n        contactMessage: '',\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setInputValues({\r\n            ...inputvalues,\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const form = event.currentTarget;\r\n\r\n        if(form.checkValidity() === true) {\r\n            console.log(inputvalues);\r\n        }\r\n        setValidated(true);\r\n        \r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"contact-name\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"contactName\" placeholder=\"Enter your name\" onChange={handleChange} required />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a valid name.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"contact-email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" name=\"contactEmail\" placeholder=\"Enter your email\" onChange={handleChange} required />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a valid email.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"contact-message\">\r\n                        <Form.Label>Message</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows=\"5\" name=\"contactMessage\" placeholder=\"Enter your message\" onChange={handleChange} required />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide some messages.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Button variant=\"dark\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport { Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faUser, faPhone, faEnvelope } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n\r\nlibrary.add(faUser, faPhone, faEnvelope);\r\n\r\nconst htmlContent = (p)=>{\r\n    switch(p.type){\r\n        case 'email':\r\n            return <a href={\"mailto:\" + p.content}>{p.content}</a>\r\n        case 'phone':\r\n            return <a href={\"tel:\" + p.content}>{p.content}</a>\r\n        default:\r\n            return p.content;\r\n    }\r\n}\r\n\r\nconst ContactInfo = ({ personalInfo }) => {\r\n    return (\r\n        <React.Fragment>\r\n            {personalInfo.map(p => {\r\n                \r\n                return (\r\n                    <Col key={p.type}>\r\n                        <label className=\"label\">\r\n                            <FontAwesomeIcon icon={p.icon} ></FontAwesomeIcon>\r\n                            &nbsp;\r\n                            {htmlContent(p)}\r\n                        </label>\r\n                    </Col>);\r\n            })}\r\n\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ContactInfo;","import React, { useState, useEffect } from 'react';\r\n// import Sections from '../../constants/Sections';\r\nimport About from './About';\r\nimport Banner from './Banner';\r\nimport Skill from './SkillList';\r\nimport Work from './Work';\r\nimport Contact from './Contact';\r\n\r\n// const MySection = (props) => <div>{props.data}</div>;\r\n\r\nconst sectionComponents = {\r\n    'about': About,\r\n    'banner': Banner,\r\n    'skill': Skill,\r\n    'work': Work,\r\n    'contact': Contact\r\n}\r\n\r\nconst Body = () => {\r\n\r\n    const [sections, setSections] = useState({});\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await fetch('api/sections');\r\n            const body = await result.json();\r\n            setSections(body);\r\n            setIsLoaded(true);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        isLoaded ?\r\n\r\n            <React.Fragment>\r\n                {sections.map((section, index) => {\r\n                    const SingleComponent = React.createElement(sectionComponents[section.id], {\r\n                        title: section.name,\r\n                        description: section.description ? section.description : '',\r\n                        image: section.image ? section.image : '',\r\n                    });\r\n                    return (\r\n                        <React.Fragment key={index}>\r\n                            {/* {section.element} */}\r\n                            {SingleComponent}\r\n                        </React.Fragment>\r\n                    );\r\n                })}\r\n            </React.Fragment>\r\n            :\r\n            <React.Fragment>\r\n                Loading\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Body;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Section, SectionTitle } from '../../styled-components/HomeStyles';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport ContactForm from './Contact-Form';\r\nimport ContactInfo from './Contact-Info';\r\n// import PersonalInfo from '../../constants/PersonalInfo';\r\n\r\n\r\n\r\nconst Contact = ({ title }) => {\r\n    const [personalInfo, setPersonalInfo] = useState({});\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await fetch('api/personalinfo');\r\n            const body = await result.json();\r\n            setPersonalInfo(body);\r\n            setIsLoaded(true);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        isLoaded ? \r\n        <React.Fragment>\r\n            <Section id=\"contact\">\r\n                <Container>\r\n                    <SectionTitle>\r\n                        {title}\r\n                    </SectionTitle>\r\n                    <Row>\r\n                        <Col md=\"8\">\r\n                            <ContactForm />\r\n                        </Col>\r\n                        <Col md=\"4\">\r\n                            <ContactInfo personalInfo={personalInfo} />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Section>\r\n        </React.Fragment>\r\n        :\r\n        <React.Fragment>\r\n            Loading...\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Contact;","import React from 'react';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport NavBar from '../components/NavBar';\r\nimport Body from '../components/home/Body';\r\n\r\nconst HomePage = () => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <NavBar />\r\n            <Header className=\"App-header\" />\r\n            <Body />\r\n            <Footer className=\"App-Footer\" />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default HomePage;","import axios from 'axios';\r\n\r\nexport const updateAbout = async (description, name, id) => {\r\n    const response = await axios.post(`/api/sections/${id}/update`, { description, name });\r\n\r\n    return response.data.success;\r\n};\r\n\r\n\r\nexport const updateSkills = async (content, name, id, _id) => {\r\n    const response = await axios.post(`/api/skills/${id}/update`, { content, name, id });\r\n\r\n    return response.data.success;\r\n};\r\n\r\nexport const addNewSkill = async (content, name, id) => {\r\n    const response = await axios.post(`/api/skills/add`, { content, name, id });\r\n\r\n    return response.data.success;\r\n};\r\n\r\nexport const deleteSkill = async (_id) => {\r\n    const response = await axios.post(`/api/skills/${_id}/delete`);\r\n\r\n    return response.data.success;\r\n}\r\n\r\nexport const updateProjects = async (values) => {\r\n    const { id,\r\n        name,\r\n        link,\r\n        description,\r\n        contribution,\r\n        percentage } = values;\r\n    const response = await axios.post(`/api/projects/${id}/update`, {\r\n        name,\r\n        link,\r\n        description,\r\n        contribution,\r\n        percentage\r\n    });\r\n\r\n    if (response.data.name === name && response.data.link === link && response.data.description === description && response.data.contribution === contribution && response.data.percentage === percentage) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nexport const updateContactInfo = async (values) => {\r\n    const { id, content } = values;\r\n\r\n    const response = await axios.post(`/api/personalinfo/${id}/update`, { content });\r\n\r\n    if (response.data.content === content) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\nexport const SubmitButton = ({ isSubmitting, isChanged, isUpdated, isNewForm }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting || !isChanged}>{isNewForm ? 'Add' : 'Update'} </Button>\r\n            {isUpdated ? <label className=\"text-success\">{isNewForm ? 'Added' : 'Updated'}</label> : ''}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport const AddButton = ({ title }) => {\r\n    return (\r\n        <Button variant=\"info\" >Add {title}</Button >\r\n    );\r\n}\r\n\r\nexport const RemoveButton = ({ title }) => {\r\n    return (\r\n        <Button variant=\"danger\" >{title} </Button >\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\n\r\n\r\nconst RichtEditor = ({ content, handleChange }) => {\r\n    // console.log(content);\r\n    // const handleEditorChange = (c, editor) => {\r\n    //     setFieldValue\r\n    // }\r\n\r\n    return (\r\n        <Editor\r\n            apiKey=\"o2no6hvd8hqeneb0ialjgelbhliwogjg9uru6d4644z505c5\"\r\n            initialValue={content}\r\n            init={{\r\n                height: 300,\r\n                menubar: false\r\n            }}\r\n            onEditorChange={handleChange}\r\n        />\r\n    );\r\n}\r\n\r\nexport default RichtEditor;","import React, { useState } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { updateAbout } from '../../services/admin.update';\r\nimport { Row, FormGroup, FormLabel, Col } from 'react-bootstrap';\r\nimport { SubmitButton } from './form.button';\r\nimport RichField from './richtest.field';\r\n\r\n\r\n\r\n\r\n\r\nconst AboutForm = ({ aboutSection }) => {\r\n    const [isChanged, setIsChanged] = useState(false);\r\n    const [isUpdated, setIsUpdated] = useState(false);\r\n\r\n    const initialValues = {\r\n        id: aboutSection._id,\r\n        name: aboutSection.name,\r\n        description: aboutSection.description,\r\n    };\r\n\r\n    const submitForm = async (values) => {\r\n        try {\r\n            const result = await updateAbout(values.description, values.name, values.id);\r\n            if (result) {\r\n                setIsUpdated(true);\r\n                setIsChanged(false);\r\n            } else {\r\n                console.log('Somthing went wrong');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    const validations = (values) => {\r\n        const errors = {};\r\n        if (!values.description) {\r\n            errors.description = 'Daescription is Required';\r\n        }\r\n\r\n        if (!values.name) {\r\n            errors.name = 'Name is Required';\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={submitForm}\r\n            validate={validations}\r\n        >\r\n            {({ isSubmitting }) => (\r\n                <Form onChange={() => setIsChanged(true)}>\r\n\r\n                    <Row>\r\n                        <FormGroup as={Col}>\r\n                            <FormLabel>Name</FormLabel>\r\n                            <Field id=\"name\" className=\"form-control\" name=\"name\" placeholder=\"name\" />\r\n                            <ErrorMessage name=\"name\" component=\"div\" />\r\n                        </FormGroup>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <FormGroup as={Col}>\r\n                            <FormLabel>Description</FormLabel>\r\n                            {/* <Field component=\"textarea\" rows={10} id=\"description\" name=\"description\" className=\"form-control\" placeholder=\"description\" /> */}\r\n                            <Field id=\"description\" name=\"description\" className=\"form-control\" placeholder=\"Description\" >\r\n                                {({ field: { value }, form: { setFieldValue } }) => (\r\n                                    <RichField\r\n                                        content={value}\r\n                                        handleChange={c => {\r\n                                            setFieldValue('description', c);\r\n                                            if (!isChanged) setIsChanged(true);\r\n                                        }}\r\n                                    />\r\n                                )}\r\n                            </Field>\r\n                            <ErrorMessage name=\"description\" component=\"div\" />\r\n                        </FormGroup>\r\n                    </Row>\r\n\r\n                    <SubmitButton isSubmitting={isSubmitting} isChanged={isChanged} isUpdated={isUpdated} />\r\n\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default AboutForm;","import React, { useState, useEffect } from 'react';\r\nimport AboutForm from '../form/about.form';\r\n\r\n\r\n\r\nconst About = () => {\r\n    const [aboutSection, setAboutSection] = useState({});\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await fetch('api/sections/about');\r\n            const jsonResult = await result.json();\r\n            if (jsonResult.length >= 0) {\r\n                setAboutSection(jsonResult[0]);\r\n                setIsLoaded(true);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        isLoaded ?\r\n            <React.Fragment>\r\n                <h1 className=\"h3 mb-3 font-weight-normal\">Edit About Section </h1>\r\n                <AboutForm aboutSection={aboutSection} />\r\n            </React.Fragment>\r\n            :\r\n            <React.Fragment>\r\n                Loading...\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default About;","import React, { useState } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { updateSkills, addNewSkill, deleteSkill } from '../../services/admin.update';\r\nimport { Row, FormGroup, FormLabel, Button, Col } from 'react-bootstrap';\r\nimport { SubmitButton } from './form.button';\r\n\r\n\r\n\r\n\r\nconst SkillForm = ({ skill, isNewForm }) => {\r\n    const [isChanged, setIsChanged] = useState(false);\r\n    const [isUpdated, setIsUpdated] = useState(false);\r\n    const [isDeleted, setIsDeleted] = useState(false);\r\n\r\n    const removeSkill = async () => {\r\n        try {\r\n            const result = await deleteSkill(skill._id);\r\n            if (result) {\r\n                setIsDeleted(true);\r\n            } else {\r\n                console.log('Somthing went wrong');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        isDeleted ?\r\n            ''\r\n            :\r\n            <Formik\r\n                initialValues={{\r\n                    _id: skill._id,\r\n                    id: skill.id,\r\n                    name: skill.name,\r\n                    content: skill.content,\r\n                }}\r\n                onSubmit={async (values) => {\r\n                    if (!isNewForm) {\r\n                        try {\r\n                            const result = await updateSkills(values.content, values.name, values.id, values._id);\r\n                            if (result) {\r\n                                setIsUpdated(true);\r\n                                setIsChanged(false);\r\n                            } else {\r\n                                console.log('Somthing went wrong');\r\n                            }\r\n\r\n                        } catch (error) {\r\n                            console.log(error);\r\n                        }\r\n                    } else {\r\n                        try {\r\n                            const result = await addNewSkill(values.content, values.name, values.id);\r\n                            if (result) {\r\n                                setIsUpdated(true);\r\n                                setIsChanged(false);\r\n                            } else {\r\n                                console.log('Somthing went wrong');\r\n                            }\r\n\r\n                        } catch (error) {\r\n                            console.log(error);\r\n                        }\r\n                    }\r\n\r\n                }}\r\n                validate={(values) => {\r\n                    const errors = {};\r\n                    if (!values.content) {\r\n                        errors.content = 'Content is Required';\r\n                    }\r\n\r\n                    if (!values.name) {\r\n                        errors.name = 'Name is Required';\r\n                    }\r\n\r\n                    if (!values.id) {\r\n                        errors.id = 'ID is required';\r\n                    }\r\n\r\n                    return errors;\r\n                }}\r\n            >\r\n                {({ isSubmitting }) => (\r\n                    <Form onChange={() => setIsChanged(true)}>\r\n                        {isNewForm ?\r\n                            <div>\r\n                                <h4 className=\"h4 mb-3 font-weight-normal\">Add New Skill </h4>\r\n                                <Row>\r\n                                    <FormGroup as={Col}>\r\n                                        <FormLabel>ID</FormLabel>\r\n                                        <Field id=\"id\" className=\"form-control\" name=\"id\" placeholder=\"ID\" />\r\n                                        <ErrorMessage name=\"id\" component=\"div\" />\r\n                                    </FormGroup>\r\n                                </Row>\r\n                            </div> :\r\n                            <h4 className=\"h4 mb-3 font-weight-normal\">Edit Skill - {skill.id} </h4>\r\n                        }\r\n                        <Row>\r\n                            <FormGroup as={Col}>\r\n                                <FormLabel>Name</FormLabel>\r\n                                <Field id=\"name\" className=\"form-control\" name=\"name\" placeholder=\"name\" />\r\n                                <ErrorMessage name=\"name\" component=\"div\" />\r\n                            </FormGroup>\r\n                        </Row>\r\n                        <Row>\r\n                            <FormGroup as={Col}>\r\n                                <FormLabel>Content</FormLabel>\r\n                                <Field component=\"textarea\" rows={3} id=\"content\" name=\"content\" className=\"form-control\" placeholder=\"Content\" />\r\n                                <ErrorMessage name=\"content\" component=\"div\" />\r\n                            </FormGroup>\r\n                        </Row>\r\n                        <Row>\r\n                            <FormGroup as={Col}>\r\n                                <SubmitButton isSubmitting={isSubmitting} isChanged={isChanged} isUpdated={isUpdated} isNewForm={isNewForm} />\r\n                                {isNewForm ? <hr /> :\r\n                                    <Button variant=\"danger\" onClick={removeSkill}> Delete </Button >\r\n                                }\r\n                            </FormGroup>\r\n                        </Row>\r\n\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n    )\r\n}\r\n\r\nexport default SkillForm;","import React, { useState, useEffect } from 'react';\r\nimport SkillForm from '../form/skill.form';\r\nimport { AddButton, RemoveButton } from '../form/form.button';\r\n\r\n\r\n\r\nconst Skill = () => {\r\n    const [skills, setSkills] = useState({});\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [newForm, setNewForm] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await fetch('api/skills');\r\n            const jsonResult = await result.json();\r\n            setSkills(jsonResult);\r\n            setIsLoaded(true);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const addNewForm = () => {\r\n        setNewForm(true);\r\n    }\r\n\r\n    const cancelForm = () => {\r\n        setNewForm(false);\r\n    }\r\n\r\n    return (\r\n        isLoaded ?\r\n            <React.Fragment>\r\n                <h1>Edit Skills</h1>\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <div onClick={addNewForm}>\r\n                        <AddButton title=\"Skill\" />\r\n                        \r\n                    </div>\r\n                    <div onClick={cancelForm}>\r\n                        <RemoveButton title='Cancel'/>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                {newForm ?\r\n                    <SkillForm skill={{\r\n                        _id: '',\r\n                        id: '',\r\n                        name: '',\r\n                        content: '',\r\n                    }} isNewForm={newForm} />\r\n                    : ''\r\n                }\r\n                {skills.map((skill, index) => {\r\n                    return <SkillForm skill={skill} key={index} />\r\n                })}\r\n\r\n            </React.Fragment>\r\n            :\r\n            <React.Fragment>\r\n                Loading...\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Skill;","import React, { useState } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { updateProjects } from '../../services/admin.update';\r\nimport { Row, FormGroup, FormLabel, Col } from 'react-bootstrap';\r\nimport { SubmitButton } from './form.button';\r\nimport RichField from './richtest.field';\r\n\r\n\r\n\r\n\r\nconst ProjectForm = ({ project }) => {\r\n    const [isChanged, setIsChanged] = useState(false);\r\n    const [isUpdated, setIsUpdated] = useState(false);\r\n\r\n    // const customRichField = () => {\r\n    //     return <RichField content = {project.content} />;\r\n    // }\r\n\r\n    return <Formik\r\n        initialValues={{\r\n            id: project._id,\r\n            name: project.name,\r\n            link: project.link,\r\n            description: project.description,\r\n            contribution: project.contribution,\r\n            percentage: project.percentage,\r\n        }}\r\n        onSubmit={async (values) => {\r\n            try {\r\n                const result = await updateProjects(values);\r\n                if (result) {\r\n                    setIsUpdated(true);\r\n                    setIsChanged(false);\r\n                } else {\r\n                    console.log('Somthing went wrong');\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }}\r\n        validate={(values) => {\r\n            const errors = {};\r\n            if (!values.description) {\r\n                errors.description = 'Content is Required';\r\n            }\r\n\r\n            if (!values.name) {\r\n                errors.name = 'Name is Required';\r\n            }\r\n\r\n            return errors;\r\n        }}\r\n    >\r\n        {({ isSubmitting }) => (\r\n            <Form onChange={() => setIsChanged(true)}>\r\n                <h1 className=\"h3 mb-3 font-weight-normal\">Edit Project - {project.id} </h1>\r\n                <Row>\r\n                    <FormGroup as={Col}>\r\n                        <FormLabel>Name</FormLabel>\r\n                        <Field id=\"name\" className=\"form-control\" name=\"name\" placeholder=\"name\" />\r\n                        <ErrorMessage name=\"name\" component=\"div\" />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup as={Col}>\r\n                        <FormLabel>Link</FormLabel>\r\n                        <Field id=\"link\" className=\"form-control\" name=\"link\" placeholder=\"Link Url\" />\r\n                        <ErrorMessage name=\"link\" component=\"div\" />\r\n                    </FormGroup>\r\n                    <FormGroup as={Col}>\r\n                        <FormLabel>Percentage</FormLabel>\r\n                        <Field as=\"select\" className=\"form-control\" name=\"percentage\">\r\n                            <option value=\"50\">50%</option>\r\n                            <option value=\"80\">80%</option>\r\n                            <option value=\"100\">100%</option>\r\n                        </Field>\r\n                        <ErrorMessage name=\"percentage\" component=\"div\" />\r\n                    </FormGroup>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <FormGroup as={Col}>\r\n                        <FormLabel>Description</FormLabel>\r\n                        <Field id=\"description\" name=\"description\" className=\"form-control\" placeholder=\"Description\" >\r\n                            {({ field: { value }, form: { setFieldValue } }) => (\r\n                                <RichField\r\n                                    content={value}\r\n                                    handleChange={c => {\r\n                                        setFieldValue('description', c);\r\n                                        if (!isChanged) setIsChanged(true);\r\n                                    }}\r\n                                />\r\n                            )}\r\n                        </Field>\r\n                        <ErrorMessage name=\"description\" component=\"div\" />\r\n                    </FormGroup>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <FormGroup as={Col}>\r\n                        <FormLabel>Contribution</FormLabel>\r\n                        <Field id=\"contribution\" name=\"contribution\" className=\"form-control\" placeholder=\"Contribution\" >\r\n                            {({ field: { value }, form: { setFieldValue } }) => (\r\n                                <RichField\r\n                                    content={value}\r\n                                    handleChange={c => {\r\n                                        setFieldValue('contribution', c);\r\n                                        if (!isChanged) setIsChanged(true);\r\n                                    }}\r\n                                />\r\n                            )}\r\n                        </Field>\r\n                        <ErrorMessage name=\"contribution\" component=\"div\" />\r\n                    </FormGroup>\r\n                </Row>\r\n\r\n                <SubmitButton isSubmitting={isSubmitting} isChanged={isChanged} isUpdated={isUpdated} />\r\n\r\n            </Form>\r\n        )}\r\n    </Formik>\r\n}\r\n\r\nexport default ProjectForm;","import React, { useState, useEffect } from 'react';\r\nimport ProjectForm from '../form/project.form';\r\n\r\nconst Work = () => {\r\n    const [projects, setProjects] = useState({});\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await fetch('api/projects');\r\n            const jsonResult = await result.json();\r\n            setProjects(jsonResult);\r\n            setIsLoaded(true);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        isLoaded ?\r\n            <React.Fragment>\r\n                {projects.map((project, index) => {\r\n                    return <ProjectForm  project={project} key={index} />\r\n                })}\r\n\r\n            </React.Fragment>\r\n            :\r\n            <React.Fragment>\r\n                Loading...\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Work;","import React, { useState } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { updateContactInfo } from '../../services/admin.update';\r\nimport { Row, FormGroup, FormLabel, Col } from 'react-bootstrap';\r\nimport { SubmitButton} from './form.button';\r\n\r\n\r\n\r\nconst ContactInfoForm = ({ contactInfo }) => {\r\n    const [isChanged, setIsChanged] = useState(false);\r\n    const [isUpdated, setIsUpdated] = useState(false);\r\n\r\n    return <Formik\r\n        initialValues={{\r\n            id: contactInfo._id,\r\n            content: contactInfo.content,\r\n        }}\r\n        onSubmit={async (values) => {\r\n            try {\r\n                const result = await updateContactInfo(values);\r\n                if (result) {\r\n                    setIsUpdated(true);\r\n                    setIsChanged(false);\r\n                } else {\r\n                    console.log('Somthing went wrong');\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }}\r\n        validate={(values) => {\r\n            const errors = {};\r\n\r\n            if (!values.content) {\r\n                errors.content = 'Content is Required';\r\n            }\r\n\r\n            return errors;\r\n        }}\r\n    >\r\n        {({ isSubmitting }) => (\r\n            <Form onChange={() => setIsChanged(true)}>\r\n                <h1 className=\"h3 mb-3 font-weight-normal\">Edit Contact - {contactInfo.type} </h1>\r\n\r\n                <Row>\r\n                    <FormGroup as={Col}>\r\n                        <FormLabel>Content</FormLabel>\r\n                        <Field id=\"content\" name=\"content\" className=\"form-control\" placeholder=\"Content\" />\r\n                        <ErrorMessage name=\"content\" component=\"div\" />\r\n                    </FormGroup>\r\n                </Row>\r\n\r\n                <SubmitButton isSubmitting={isSubmitting} isChanged={isChanged} isUpdated={isUpdated} />\r\n            </Form>\r\n        )}\r\n    </Formik>\r\n}\r\n\r\nexport default ContactInfoForm;","import React, { useState, useEffect } from 'react';\r\nimport ContactInfoForm from '../form/contactinfo.form';\r\n\r\n\r\nconst ContactInfo = () => {\r\n    const [contactInfos, setContactInfos] = useState({});\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await fetch('api/personalinfo');\r\n            const jsonResult = await result.json();\r\n            setContactInfos(jsonResult);\r\n            setIsLoaded(true);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        isLoaded ?\r\n            <React.Fragment>\r\n                {contactInfos.map((contactInfo, index) => {\r\n                    return <ContactInfoForm  contactInfo={contactInfo} key={index} />\r\n                })}\r\n\r\n            </React.Fragment>\r\n            :\r\n            <React.Fragment>\r\n                Loading...\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ContactInfo;","import React from 'react';\r\nimport About from './About';\r\nimport Skill from './SkillList';\r\nimport ProjectList from './ProjectList';\r\nimport ContactInfo from './ContactInfo';\r\nimport { Container, Tabs, Tab } from 'react-bootstrap';\r\n\r\n\r\n\r\nconst Body = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Container>\r\n                <Tabs defaultActiveKey=\"about\" id=\"admin-update-panel\">\r\n                    <Tab eventKey=\"about\" title=\"About\">\r\n                        <About />\r\n                    </Tab>\r\n                    <Tab eventKey=\"skill\" title=\"Skills\">\r\n                        <Skill />\r\n                    </Tab>\r\n                    <Tab eventKey=\"project\" title=\"Projects\">\r\n                        <ProjectList />\r\n                    </Tab>\r\n                    <Tab eventKey=\"contact\" title=\"Contact Info\">\r\n                        <ContactInfo />\r\n                    </Tab>\r\n                </Tabs>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Body;\r\n","import axios from 'axios';\r\n\r\nexport const login = async (username, password) => {\r\n    const response = await axios.post(\"api/auth/signin\", { username, password });\r\n    if (response.data.accessToken) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n    }\r\n    return response.data;\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem(\"user\");\r\n    return true;\r\n}\r\n\r\nexport const register = (username, email, password) => {\r\n    return axios.post(\"api/auth/signup\", {\r\n        username,\r\n        email,\r\n        password\r\n    });\r\n}\r\n\r\nexport const getCurrentUser = () => {\r\n    return JSON.parse(localStorage.getItem('user'));;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Body from '../components/admin/Body';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\n\r\n// import { Redirect } from \"react-router-dom\";\r\nimport * as AuthService from \"../services/auth.service\";\r\n\r\n\r\nconst AdminUser = () => {\r\n  const history = useHistory();\r\n\r\n  const emptyUser = {\r\n    username: '',\r\n    email: '',\r\n    isAdmin: false,\r\n  }\r\n\r\n  const [userInfo, setUserInfo] = useState(emptyUser);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const userDetail = await AuthService.getCurrentUser();\r\n      if (userDetail && userDetail.roles.includes('ROLE_ADMIN')) {\r\n        setUserInfo({\r\n          username: userDetail.username,\r\n          email: userDetail.email,\r\n          isAdmin: true,\r\n        });\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const logout = async () => {\r\n    const loggedout = await AuthService.logout();\r\n    if (loggedout) {\r\n      history.push('/login');\r\n    }\r\n  };\r\n\r\n  return (\r\n    userInfo.isAdmin ?\r\n      <React.Fragment>\r\n\r\n        <div className=\"container\">\r\n          <Button className=\"float-right\" variant=\"secondary\" onClick={logout}>Logout</Button>\r\n          <Body />\r\n        </div>\r\n      </React.Fragment>\r\n      :\r\n      <React.Fragment>\r\n        <div className=\"container\">\r\n        <Button className=\"float-right\" variant=\"secondary\" onClick={logout}>Logout</Button>\r\n          <header className=\"jumbotron\">\r\n            <h3>You are not admin.</h3>\r\n          </header>\r\n          <a href='/'>Go back to homepage</a>\r\n        </div>\r\n      </React.Fragment>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default AdminUser;","import styled from 'styled-components';\r\nimport { Form } from 'formik';\r\n\r\nexport const StyledForm = styled(Form)`\r\n    width: 100%;\r\n    max-width: 330px;\r\n    padding: 15px;\r\n    margin: 0 auto;\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { Formik, Field, ErrorMessage } from 'formik';\r\nimport { StyledForm } from '../../styled-components/LoginStyles';\r\n\r\n\r\nimport * as AuthService from \"../../services/auth.service\";\r\n\r\n\r\nconst LoginForm = () => {\r\n    const history = useHistory();\r\n    const [isLogin, setLogin] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const userInfo = await AuthService.getCurrentUser();\r\n            if (userInfo && userInfo.success) {\r\n                setLogin(true);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const initialValues = {\r\n        username: '',\r\n        password: '',\r\n    };\r\n\r\n    const submitForm = async (values) => {\r\n        try {\r\n            const result = await AuthService.login(values.username, values.password);\r\n            if (result.success) {\r\n                history.push('/admin');\r\n            } else {\r\n                alert(result.message);\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    const validations = (values) => {\r\n        const errors = {};\r\n        if (!values.username) {\r\n            errors.username = 'Username is Required';\r\n        }\r\n        // else if (\r\n        //     !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n        // ) {\r\n        //     errors.email = 'Invalid email address';\r\n        // }\r\n\r\n        if (!values.password) {\r\n            errors.password = 'Password is Required';\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    return (\r\n        isLogin ?\r\n            <React.Fragment>\r\n                <Redirect to=\"/admin\" />\r\n            </React.Fragment>\r\n            :\r\n            <React.Fragment>\r\n                <Formik\r\n                    initialValues={initialValues}\r\n                    onSubmit={submitForm}\r\n                    validate={validations}\r\n                >\r\n                    {({ isSubmitting }) => (\r\n                        <StyledForm>\r\n                            <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n                            <Field id=\"username\" className=\"form-control\" name=\"username\" placeholder=\"Username\" />\r\n                            <ErrorMessage name=\"username\" component=\"div\" />\r\n\r\n                            <Field type=\"password\" id=\"password\" name=\"password\" className=\"form-control\" placeholder=\"Password\" />\r\n                            <ErrorMessage name=\"password\" component=\"div\" />\r\n                            <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\" disabled={isSubmitting}>Sign in</button>\r\n                        </StyledForm>\r\n                    )}\r\n                </Formik>\r\n            </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport LoginForm from '../components/authentication/login.component';\r\n\r\nconst HomePage = () => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <LoginForm />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default HomePage;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport adminUser from './pages/AdminPage';\nimport Login from './pages/LoginPage';\nimport './App.css';\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <React.Fragment>\n        <div id=\"page-body\">\n          <Switch>\n            <Route path=\"/\" component={HomePage} exact />\n            <Route path=\"/admin\" component={adminUser} exact />\n            <Route path=\"/login\" component={Login} exact />\n          </Switch>\n        </div>\n      </React.Fragment>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'whatwg-fetch';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}